- content_for :utils do
  == render "recipes/utils", recipe: @recipe, owner: @owner, available_operations: [:tag, :post]

main#posts-show.recipe-layout
  == render "recipes/basic_information"

  section#links
    == render "links"
    - if can? :update, @recipe
      == link_to "Edit Post", [:edit, @owner, @recipe, @post]
      == link_to "Delete Post", [@owner, @recipe, @post], method: :delete

  h1#post-header
    'Journal

  h1#post-title
    == @post.title

  h2#post-meta
    .author
      .decoration-text
        'posted by
      == link_to recipes_path(owner_name: @post.user.name) do
        .name
          == @post.user.name
    .created_at
      == @post.created_at

  section#post-body
    == Sanitize.clean @post.body.html_safe, Sanitize::Config::RELAXED

  section#links
    == link_to "Journal List", [@owner, @recipe, :posts]

  section#comments
    #comments-meta
      .how-many
        == "#{@post.comments.length} comments"
    ul#comment-list
      - @post.comments.each do |comment|
        == render "comments/comment", comment: comment

    == form_for Comment.new, remote: true do |f|
      == image_tag current_user.avatar, class: "avatar"
      == f.text_area :comment, placeholder: "Add commentâ€¦"
      == f.hidden_field :commentable_type, value: @post.class.name
      == f.hidden_field :commentable_id, value: @post.id
      == f.submit "Add Comment", id: "submit-comment"
      #submit-comment-btn
        'Add Comment

  - content_for :bottom
    coffee:
      $(document).on "click", ".comment .delete-btn", ->
        $(this).closest("li").remove()

      $(document).on "ajax:success", "#new_comment", (e, data) ->
        $("ul#comment-list").append data.html
        $("#new_comment").find(":text, textarea").val ""

      $(document).on "click", "#submit-comment-btn", ->
        $("#submit-comment").trigger "click"
