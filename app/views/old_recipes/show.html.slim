- content_for :utils do
  == render "recipes/utils", recipe: @recipe, owner: @owner, available_operations: [:fork, :slide, :tag]

main#recipes-show

  == render "basic_information"

  ul#tabs
    li.tab#recipe-tab.selected
     'Recipe
    li.tab#journal-tab.not-selected
      == link_to "Journals", recipe_posts_path(owner_name: @owner.name, recipe_id: @recipe.name), class: "tab"
    li.links
      == link_to "Delete Recipe", [@owner, @recipe], method: :delete, class: "btn" if can? :manage, @recipe
      == link_to "Edit Recipe", edit_recipe_path(@recipe, owner_name: @owner.name), class: "btn" if can? :manage, @recipe


  section#materials
    h1
      'Materials
    ul#material-list
      - @recipe.materials.each do |item|
        == render "material", item: item

    h1
      'Tools
    ul#tool-list
      - @recipe.tools.each do |item|
        == render "tool", item: item

  section#making
    h1
      'Making
    ul#statuses
      - @recipe.statuses.sorted_by_position.each do |item|
        == render "status", item: item

  section#usages
    h1
      'Usages
    ul#usage-list
      - @recipe.usages.each do |usage|
        == render "usage_form", usage: usage
    == render "add_usage_form", usage: Usage.new

  section#comments
    #comments-meta
      .how-many
        == "#{@recipe.comments.length} comments"
    ul#comment-list
      - @recipe.comments.each do |comment|
        == render "comments/comment", comment: comment

    == form_for Comment.new, remote: true do |f|
      .avatar-wrapper
        == image_tag current_user.avatar, class: "avatar" if user_signed_in?
      == f.text_area :comment, placeholder: "Add commentâ€¦"
      == f.hidden_field :commentable_type, value: @recipe.class.name
      == f.hidden_field :commentable_id, value: @recipe.id
      == f.submit "Add Comment", class: "submit-btn btn"

#markup-help [
    data-css-path = asset_path("recipe.css")
    data-blueprint-upload-path = url_for([@owner, @recipe, Attachment.new])
    data-material-upload-path = url_for([@owner, @recipe, Material.new])
    data-tool-upload-path = url_for([@owner, @recipe, Tool.new])
  ]

  - content_for :bottom
    coffee:
      $ ->
      	$(".fancybox").fancybox
          openEffect: "none"
          closeEffect: "none"
          wrapCSS: ".fork-popup"
          helpers:
            overlay:
              css:
                "background":"rgba(0, 0, 0, 0.2)"

        $(document).on "ajax:success", ".edit-form", (event, data, status) ->
          if data.success
            $(this).closest("li.#{data.class}").replaceWith data.html

        $(document).on "ajax:success", ".add-form", (event, data, status) ->
          if data.success
            $(event.target).find("textarea:not(.not-cleared), input[type!=submit]:not(.not-cleared)").val ""
            $(event.target).css "display","none"
            self = this
            if data.class == "way"
              $(event.target).closest(".ways").find(".list").append data.html
              self = $(event.target).closest(".ways").find(".list>:last-child")
            else if data.class == "usage"
              $("#usage-list").append data.html
              self = $("#usage-list li:last-child")
            else 
              return
            $(event.target).siblings(".cancel-btn").hide()
            $(event.target).siblings(".add-btn").show()
            self.trigger "tinymcize"


        $(document).on "ajax:success", ".remove-way, .remove-usage", ->
          $(this).closest("form").remove()

        $(document).on "ajax:success", ".delete-btn", (event, data, status) ->
          if data.class == "way"
            $(event.target).closest(".status").find(".add-btn").css("display", "block")
          else if data.class == "status"
            $(event.target).closest("li").next("li").remove()
          $(event.target).closest("li").remove()

        $(document).on "click", ".edit-btn, .add-btn", (event, data) ->
          event.preventDefault()
          $(event.target).siblings("form").show()
          $(this).hide()
          $(this).siblings(".cancel-btn").show()

        $(document).on "click", ".cancel-btn", (event, data) ->
          event.preventDefault()
          $form = $($(event.target).siblings "form")
          $form.hide()
          $form.find("input[type=text], textarea").each ->
            $(this).val $(this).attr("data-original-value")
          $form.find("input[type=checkbox]").each ->
            $(this).attr("checked", false)
          $form.find("input[type=file]").each ->
            $(this).val ""
          $(this).hide()
          $(this).siblings(".edit-btn, .add-btn").show()

        $(document).on "ajax:success", "#new_tag", (event, data, status) ->
          $(event.target).siblings("#tag-list").append data.html
          $(event.target).find("#tag_name").val ""

        $(document).on "click", ".tag-delete-btn", (event, data) ->
          $(this).closest(".tag").remove()

        $(document).on "click", "#slideshow-btn", (event, data) ->
          event.preventDefault()
          $(".fancybox.item-photo").first().trigger "click"

        $(document).on "click", ".upload-image-btn", (event, data) ->
          event.preventDefault()
          $(event.target).parents(".photo-field").siblings(".edit-form-wrap").find(".add-photo").trigger "click"

        $(document).on "change", ".add-photo", (event, data, status) ->
          file = event.target.files[0]
          reader = new FileReader()
          reader.onload = ->
            $(event.target).closest(".edit-form-wrap").siblings(".photo-field").find("img").attr "src", reader.result
            $(event.target).parents("form.edit-form").submit()
          reader.readAsDataURL file

        $(document).on "click", ".delete-image-btn", (event, data) ->
          event.preventDefault()
          element = $(event.target).parents(".photo-field").siblings(".edit-form-wrap")
          element.find(".remove-photo").attr "checked", true
          element.find("form.edit-form").submit()

        $(document).on "click", ".fork-destination", (event, data) ->
          $(this).find("form").submit()

        $(document).on "click", ".comment .delete-btn", ->
          $(this).closest("li").remove()

        $(document).on "click", "#new_comment .submit-btn", (event)->
          event.preventDefault()
          if $.trim($("#comment_comment").val()) != ""
            $("#new_comment").submit()
            $("#comment_comment").val ""

        $(document).on "ajax:success", "#new_comment", (e, data) ->
          $("ul#comment-list").append data.html

        UPLOAD_LIMIT = 10 * 1000 * 1000

        $(document).on "change", ".add-photo", (event) ->
          if $(this)[0].files[0].size > UPLOAD_LIMIT
            $(this).siblings(".filesize-caution").css "display", "block"
            $(this).siblings("input").attr "disabled", true
          else
            $(this).siblings(".filesize-caution").css "display", "none"
            $(this).siblings("input").attr "disabled", false

        # ----------- image and youtube --------------
        w = window

        YOUTUBE_URL_MIN_LENGTH   = 41
        YOUTUBE_EMBED_URL_BASE   = "http://www.youtube.com/embed/"
        YOUTUBE_WATCH_URL_REGEXP = /https?:\/\/(?:www\.)?youtube.com\/watch\?v=([^&]{11,})(&\S*)?$/
        VIDEOID_MATCH_INDEX      = 1

        $(document).on "click", ".photo-upload-btn", (event) ->
          event.preventDefault()
          $(this).siblings(".file-field").trigger "click"

        $(document).on "change", ".file-field", (event) ->
          target = event.target
          imageField = $(this).closest ".image-field"
          file = target.files[0]
          reader = new FileReader
          reader.onload = ->
            imageField.css "background-image", "url('#{reader.result}')"
            $(imageField).find("iframe").attr "src",""

          reader.readAsDataURL file

        $(document).on "click", ".input-video-url-btn", (event) ->
          event.preventDefault()
          w.targetImageField = $(this).parents ".image-field"
          target = $(this).siblings ".video-form"
          $.fancybox target

        $(document).on "click", ".video-form-buttons .ok-btn", (event) ->
          event.preventDefault()
          if $(this).hasClass "disabled"
            return false
          else
            imageField = w.targetImageField
            if $(imageField).find("iframe").length < 1
              $(imageField).prepend "<iframe/>"
            embed_url = YOUTUBE_EMBED_URL_BASE + w.videoIdForItem
            $(imageField).find("iframe").attr "src", embed_url
            $(this).parents(".video-form").find(".video-id-field").val w.videoIdForItem
            w.videoIdForItem = ""
            w.targetImageField = ""
            $.fancybox.close()

        $(document).on "click", ".video-form-buttons .cancel-btn", (event) ->
          event.preventDefault()
          $.fancybox.close()

        $(document).on "click", ".image-field .remove-image-btn", (event) ->
          event.preventDefault()
          imageField = $(this).parents ".image-field"
          $(imageField).css "background-image", $(imageField).data("noImageUrl")
          $(imageField).find("iframe").attr "src", ""
          $(imageField).find(".file-field").val ""
          $(imageField).find(".video-form .video-id-field").val ""

        disableVideoSubmitButtonForItems = ->
          $(".caution").css "display", "block"
          $("iframe.video-form-preview").attr "src", ""
          $(".ok-btn").addClass "disabled"

        getVideoForItems = ->
          url = $(this).val()
          if w.previous_url != url
            videoForm = $(this).closest ".video-form"
            w.previous_url = url
            if url.length > YOUTUBE_URL_MIN_LENGTH
              if matched = url.match YOUTUBE_WATCH_URL_REGEXP
                w.videoIdForItem = matched[VIDEOID_MATCH_INDEX]
                embed_url = YOUTUBE_EMBED_URL_BASE + w.videoIdForItem
                $(videoForm).find("iframe.video-form-preview").attr "src", embed_url
                $(videoForm).find(".caution").css "display", "none"
                $(videoForm).find(".ok-btn").removeClass "disabled"
              else
                $(videoForm).find(".caution").text "Invalid YouTube URL"
                disableVideoSubmitButtonForItems()
            else
              $(videoForm).find("#caution").text "URL is too short. URL length #{url.length}. Min length = 42."
              disableVideoSubmitButtonForItems()

        $(document).on "keyup", "input.youtube-url-input", getVideoForItems
        $(document).on "change", "input.youtube-url-input", getVideoForItems 
       
