== nested_form_for [@owner, @recipe] do |f|
  - if @recipe.errors.any?
    #error_explanation
      h2
        == pluralize(@recipe.errors.count, "error")
        'prohibited this user from being saved:
      ul
        - @recipe.errors.full_messages.each do |msg|
          li == msg
  - if @owner.is_a?(User) && @owner.groups.any?
    == f.select :group_id, @owner.groups.to_a.push(@owner).map{|o| [o.name, url_for([o, @recipe])]}, selected: url_for([current_user,@recipe])
  == f.text_field :title, placeholder: "Input Project Title", tabindex: 1
  == f.text_field :name, placeholder: "Input_Repository_Name"
  section.visual style="background-image: url('#{@recipe.photo}')"
    iframe src: "", frameborder: 0, allowfullscreen:
    .form-wrapper
      == link_to "Upload Image File…", "", title: "upload-image", id: "photo-upload-btn"
      == f.file_field :photo, title: "画像をアップロード", accept: "image", style: "display:none"
      == link_to "Input YouTube URL…", "", title: "input-video-url", id: "input-video-url-btn"
      #dialog-form
        == f.text_field :youtube_url, title: "YouTube動画をアップロード"
        #caution style="font-size: 12px; color: red;"
  section.description
    h1
      'Summary
    == f.text_area :description, placeholder: "Add Summary", tabindex: 3

  - if @recipe.persisted?
    #materials
      == f.fields_for :materials do |mf|
        .material
          == mf.file_field :photo
          == mf.text_area :description
          == mf.link_to_remove "Remove Material"
      == f.link_to_add "Add Material", :materials

  / NOTE: temporary not shown
  /hr

  /  #tools
  /    == f.fields_for :tools do |tf|
  /      .tool
  /        == tf.file_field :photo
  /        == tf.text_field :name
  /        == tf.text_area :description
  /        == tf.link_to_remove "Remove Tool"
  /    == f.link_to_add "Add Tool", :tools

  hr

    #making
      == render "status_form", f: f
    == f.submit

- content_for :bottom do
  coffee:

    $ ->
      $(document).on "keypress", "input:not(.allow_submit)", (event) -> event.which != 13
      # TODO:Add Movieのとき本体にビデオsrc適用
      $("#dialog-form").dialog({
        autoOpen: false,
        title: "Input YouTube URL",
        height: 200,
        width:  640,
        modal:  true,
        buttons: {
          "Add Movie": ->
            $(this).dialog "close"
          ,
          "Delete Movie": ->
            $(this).dialog "close"
            $("iframe").attr "src", ""
            $("#photo-upload-btn").css "display", "block"
            $("#photo-upload-btn").css "color", "black"
            $("#input-video-url-btn").css "display", "block"
            $("#input-video-url-btn").css "color", "black"
          ,
          cancel: ->
            $(this).dialog "close"
        },
      });

      remove_button = ->
        $("#photo-upload-btn").css "display","none"
        $("#input-video-url-btn").css "display","none"
  
      $(document).on "click", "#save-btn", (event, data) ->
        $('form#new_recipe').submit()
  
      $(document).on "click", "#photo-upload-btn", (event, data) ->
        event.preventDefault()
        $("input#recipe_photo").trigger "click"
  
      $(document).on "change", "input#recipe_photo", (event, data, status) ->
        file = event.target.files[0]
        reader = new FileReader()
        reader.onload = ->
          $("section.visual").css("background-image", "url('#{reader.result}')")
          $("iframe").attr "src",""
          $("#photo-upload-btn").css "color","black"
          $("#input-video-url-btn").css "color","black"
          remove_button()
        reader.readAsDataURL(file)
  
      $(document).on "click", "#input-video-url-btn", (event, data) ->
        event.preventDefault()
        $("#dialog-form").dialog("open");
  
      $(document).on "change", "select#recipe_group_id", (event) ->
        $("#new_recipe").attr "action", $(this).val()
  
      check_video_url = ->
        input_url = $(this).val()
        # TODO: videoの中身を表示するのを、ダイアログの中にする
        if window.past_input_url != input_url
          window.past_input_url = input_url
          youtube_url_min_length = 41
          if input_url.length > youtube_url_min_length
            url = input_url
            if url.indexOf /https?:\/\/(?:www\.)?youtube.com\/watch\?v=\w+(&\S*)?$/
              videoid = url.split("?v=")[1]
              if videoid.length == 11
                youtube_data_url = "http://gdata.youtube.com/feeds/api/videos/"
                youtube_video_url = "http://www.youtube.com/embed/"
                get_url = youtube_data_url + videoid
                $.ajax
                  async:    true
                  type:     "GET"
                  url:      get_url
                  context:  this
                  success: (data, status, xhr) ->
                    embed_url = youtube_video_url + videoid
                    $("iframe").attr "src", embed_url
                    remove_button()
                  error: (data, status, xhr) ->
                    $("#caution").text(status + " :" + xhr.status)
                  complete: (xhr, status) ->
                    $("#caution").text(status + " :" + xhr.status)
              else
                $("#caution").text("Invalid URL: video id is too short")
            else
              $("#caution").text("Invalid URL: not youtube.")

      $(document).on "keyup", "input#recipe_youtube_url", check_video_url
      $(document).on "change", "input#recipe_youtube_url", check_video_url
  
      $("iframe").hover ->
          $("#photo-upload-btn").css "display","block"
          $("#input-video-url-btn").css "display","block"
        ,->
