#tabs
  == link_to project_path(@project, owner_name: @owner.slug) do
    .tab.active
      'Recipe
      .count
        == "(#{@project.recipe.states.length})"
  == link_to project_note_path(@project, owner_name: @owner.slug) do
    .tab
      'Note
      .count
        == "(#{@project.note.note_cards.length})"

section#recipe-cards
  #top
    .inner
      section#material-list
        h2 Materials
        ul

      section#tool-list
        h2 Tools
        ul

      section#blueprint-list
        h2 Blueprints
        ul

  section#making-list
    #top
      .inner
        h2 Making
    ul#recipe-card-list.card-list
      - if can? :edit, @project
        #card-order-tools
          == link_to "Change Order", "#", class: "order-change-btn btn"
          == link_to "Commit Order", "#", class: "order-commit-btn btn"
      - @recipe.states.ordered_by_position.each do |card|
        li class="card-wrapper #{card.htmlclass}-wrapper"
          == render "recipe_cards/state", card: card, owner: @owner, project: @project
    - if can? :edit, @project
      .article-column.sp
        == link_to "+ Add State", new_project_recipe_state_path(owner_name: @owner.slug, project_id: @project.name, "state[_type]" => Card::State.name), remote: true, class: "btn new-card", "data-list" => "#recipe-card-list", "data-classname" => "state-wrapper", "data-template" => "#state-template"

    == nested_form_for [@owner, @project, @recipe], remote: true do |f|
      == f.fields_for :states do |ff|
        == ff.text_field :position, class: "position", "data-id" => ff.object.id
        == ff.hidden_field :id, class: "id"
      == f.link_to_add "Add Card Order", :states, id: "add-card-order"
      == f.submit "submit", id: "submit-card-order"
