section#recipe-cards
  h1 Recipe
  ul#recipe-card-list.card-list
    - @recipe.recipe_cards.ordered_by_position.each do |card|
      == render "recipe_cards/recipe_card", card: card, owner: @owner, project: @project

  == link_to "+ Add State", new_project_recipe_state_path(owner_name: @owner.name, project_id: @project.name, "state[_type]" => Card::State.name), remote: true, class: "btn new-card", "data-list" => "#recipe-card-list"

  == form_for [@owner, @project, :recipe, Card::Transition.new], method: :post, remote: true do |f|
     == f.hidden_field :_type, value: Card::Transition.name 
     == f.hidden_field :move_to, value: 0

- content_for :bottom
  coffee:
    $ ->
      getCards = ->  
        $(".card.state, .card.transition")

      numbering = ->
        cards = getCards()
        for card, index in cards
          $(card).attr "data-position", index + 1
          $(card).find(".position").text index + 1

      $(document).on "card-order-changed", "#recipe-card-list", (event) ->
        cards = getCards()
        previous = null
        position = 0
        for card in cards
          position += 1        
          card = $(card)
          if previous and card.hasClass("state") and previous.hasClass("state") 
            $("#transition_move_to").val position
            $("#new_transition").submit()
            position += 1
          previous = card
        numbering()

      $(document).on "ajax:success", "#new_transition", (xhr, data) ->
        card = $(data.html)
        position = parseInt card.attr("data-position")
        cards = getCards()
        wrapper = window.createCardWrapper $("#recipe-card-list"), card
        target = window.getCardWrapper $(cards[position-1])
        wrapper.insertBefore target 
        numbering()
 