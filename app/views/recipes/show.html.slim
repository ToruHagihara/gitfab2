- content_for :utils do
  == render "recipes/utils", recipe: @recipe, owner: @owner

main#recipes-show
  p
    == link_to "posts", recipe_posts_path(owner_name: @owner.name, recipe_id: @recipe.name)
    '|
    == link_to "collaborators", recipe_collaborations_path(owner_name: @owner.name, recipe_id: @recipe.name)
    '|
    == toggle_star_link_for @recipe
  p id="notice" =notice

  section#basic-information
    h1
      == @recipe.title

    #project-summary.row
      .visual style="background-image: url('#{@recipe.photo}')"

      section.description
        h1
          'Abstract
        .text
          == @recipe.description

  section#materials
    h1
      'Materials
    ul#material-list
      - @recipe.materials.each do |item|
        == render "material", item: item

  section#tools
    h1
      'Tools
    ul#tool-list
      - @recipe.tools.each do |item|
        == render "tool", item: item

  section#making
    h1
      'Making
    ul#statuses
      - @recipe.statuses.sorted_by_position.each do |item|
        == render "status", item: item

  section#usages
    h1
      'Usages
    ul#usage-list
      - @recipe.usages.each do |item|
        == render "item", item: item


  hr


  p
    == link_to "Edit", [:edit, @owner, @recipe] if can? :manage, @recipe
    '|
    == link_to "Delete", [@owner, @recipe], method: :delete if can? :manage, @recipe
    '|
    == link_to "Back", [@owner, :recipes]


  content_for :bottom
    javascript:
      $(document).ready(function() {
      	$(".fancybox").fancybox({
      		openEffect	: 'none',
      		closeEffect	: 'none'
      	});
      })

      // TODO: refactoring html insert part
      // TODO: add transaction
      $(document).ready(function() {
        $(".sortable").sortable({
          items       : "li:nth-of-type(2n+1):not(.way)",
          placeholder : "ui-state-highlight",
          update      : function(event, ui) {
            if( ui.item.hasClass("status")) {
              addWayListWrapper(event, ui);
              combineWayListWrapper(event, ui);
              refreshListItemsId(event, ui);
              refreshStatusIndex(event, ui);
            }
          },
          stop        : function(event, ui) {
            var new_position = $("section#making .status").index(ui.item) + 1;
            $.ajax({
              url: $(ui.item).find("form").attr("action"),
              type: "PATCH",
              dataType: "json",
              data: {target: "position", position: new_position}
            });
          },
        });
        $(".sortable").disableSelection();

        $(".linked-sortable").sortable({
          items       : "li",
          placeholder : "ui-state-highlight",
          connectWith : ".linked-sortable",
          create      : function(event, ui) {
            $(this).append("<li class='way-placeholder'></li>");
          },
          update      : function(event, ui) {
            $(".linked-sortable").each( function() {
              refreshWayPlaceholder(event, ui);
            });
          },
          stop      : function(event, ui) {
            var way_set_id = $(ui.item).closest(".way_set").attr("data-id");
            $.ajax({
              url: $(ui.item).find("form").attr("action"),
              type: "PATCH",
              dataType: "json",
              data: {target: "prev_status_position", position: way_set_id}
            });
          },
        });
        $(".linked-sotable").disableSelection();
      })

      function addWayListWrapper(event, ui) {
        if(ui.item.prev().hasClass("way") || ui.item.next().hasClass("status")) {
          $("<li id='way-list-wrapper-new' class='way-list-wrapper'></li>").insertAfter("#"+ui.item.attr("id"));
        }
        else if(ui.item.prev().hasClass("status") || ui.item.next().hasClass("way")){
          $("<li id='way-list-wrapper-new' class='way-list-wrapper'></li>").insertBefore("#"+ui.item.attr("id"));
        }
        $("li#way-list-wrapper-new").append("<ul class='way-list'></ul>");
        var clone = $(".add-form-wrap").eq(-2).clone(true);
        $("li#way-list-wrapper-new").append(clone);
      }

      function combineWayListWrapper(event, ui) {
        var path = $("#way-list-wrapper-" + (ui.item.attr("id").slice(-1)-1) +" "+"ul.way-list");
        $("#way-list-wrapper-"+ui.item.attr("id").slice(-1)).find(".way").appendTo(path);
        $("#way-list-wrapper-"+ui.item.attr("id").slice(-1)).remove();
      }

      function refreshListItemsId(event, ui) {
        $("li.status").each( function(index) {
          $(this).attr("id", "status-"+(index+1));
        });
        $("li.way-list-wrapper").each( function(index) {
          $(this).attr("id", "way-list-wrapper-"+(index+1));
        });
        $(".way").each( function(index) {
          $(this).attr("id", "way-"+(index+1));
        });
      }

      function refreshStatusIndex(event, ui) {
        $("li.status .index-field").each( function(index) {
          $(this).text("Status"+(index+1));
        });
      }

      function refreshWayPlaceholder(event, ui) {
        if( $(this).find("li")[1] && $(this).find("li").hasClass("way-placeholder") ) {
          $(this).find("li.way-placeholder").remove();
        }
        else if( !($(this).find("li")[0]) ) {
          $(this).append("<li class='way-placeholder'></li>");
        }
      }

    coffee:
      $(document).on "ajax:success", ".edit-form", (event, data, status) ->
        if data.success
          selector = "li##{data.class}-#{data.id}"
          $(selector).replaceWith data.html

      $(document).on "ajax:success", ".add-form", (event, data, status) ->
        if data.success
          $(event.target).find("input[type!=submit]").val ""
          $(event.target).css "display","none"
          if data.class == "way"
            $(event.target).closest(".add-form-wrap").siblings(".way-list").append data.html
          else
            $("##{data.class}-list").append data.html

      $(document).on "ajax:success", ".delete-btn", (event, data, status) ->
        if data.class == "way"
          $(event.target).closest(".status").find(".add-btn").css("display", "block")
        else if data.class == "status"
          $(event.target).closest("li").next("li").remove()
        $(event.target).closest("li").remove()

      $(document).on "click", ".edit-btn, .add-btn", (event, data) ->
        event.preventDefault()
        $(event.target).siblings("form").css "display", "block"

      $(document).on "ajax:success", "#new_tag", (event, data, status) ->
        $(event.target).siblings("#tag-list").append data.html
        $(event.target).find("#tag_name").val ""

      $(document).on "click", ".tag-delete-btn", (event, data) ->
        $(this).closest(".tag").remove()

      $(document).on "click", "#slideshow-btn", (event, data) ->
        event.preventDefault()
        $(".fancybox").first().trigger "click"

      $(document).on "click", ".upload-image-btn", (event, data) ->
        event.preventDefault()
        $(event.target).parents(".photo-field").siblings(".edit-form-wrap").find(".add-photo").trigger "click"

      $(document).on "change", ".add-photo", (event, data, status) ->
        file = event.target.files[0]
        reader = new FileReader()
        reader.onload = ->
          $(event.target).closest(".edit-form-wrap").siblings(".photo-field").find("img").attr "src", reader.result
          $(event.target).parents("form.edit-form").submit()
        reader.readAsDataURL file

      $(document).on "click", ".delete-image-btn", (event, data) ->
        event.preventDefault()
        element = $(event.target).parents(".photo-field").siblings(".edit-form-wrap")
        element.find(".remove-photo").attr "checked", true
        element.find("form.edit-form").submit()

      $ ->
        $(".linked-sortable").each (index) ->
          if !($(this).find("li")[0])
            $(this).append "<li class='way-placeholder'></li>"
