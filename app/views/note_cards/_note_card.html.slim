article class="card note_card" id="#{card.id}"
  .first-column
    .horizontal-border.black.f-left
  .article-column
    .card-content
      .left
        == render "components/card_title", card: card
        .meta
          .postedby
            - author = nil
            - if card.contributions.length > 0
              -  author = User.find(card.contributions[0].contributor_id)
            - else
              -  author = @project.owner
            - datetime = card.created_at == nil ? "" : card.created_at.strftime('%B %d, %Y')
            - if author.present?
              - link = link_to author.name, projects_path(owner_name: author.slug)
              == "posted by #{link} on #{datetime}"
            - else
              == "posted on #{datetime}"

          .control
            span.starred
              == render "components/like", resources: [@owner, @project, :note, card]
            - if can? :manage, card
              span.edit
                == link_to "delete", project_note_note_card_path(owner_name: @owner.slug, project_id: @project.name, id: card.id), remote: true, method: :delete, class: "btn delete-card", "data-container" => ".card"
                == link_to "edit", edit_project_note_note_card_path(owner_name: @owner.slug, project_id: @project.name, id: card.id), remote: true, class: "btn edit-card", "data-container" => ".card"
        .description
          == truncate_html Sanitize.clean(card.description, Sanitize::Config::RELAXED), length: 220, omission: link_to("â€¦", project_note_note_card_path(owner_name: @owner.slug, project_id: @project.name, id: card.id))
      .right
        - if card.figures.present?
          - if card.figures.first.content.present?
              == render "components/card_figures", card: card

      == render "components/card_attachments", card: card
